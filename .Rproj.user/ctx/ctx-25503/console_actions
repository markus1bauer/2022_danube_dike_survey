{
    "type": [
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "                    cols(",
        "+ ",
        "                      .default = \"?\",",
        "+ ",
        "                      id = \"f\",",
        "+ ",
        "                      location = \"f\",",
        "+ ",
        "                      block = \"f\",",
        "+ ",
        "                      plot = \"f\",",
        "+ ",
        "                      exposition = \"f\",",
        "+ ",
        "                      ffh = \"f\",",
        "+ ",
        "                      vegetationCov = \"d\"",
        "+ ",
        "                    )) %>%",
        "+ ",
        "  select(id, plot, block, location, surveyYear, constructionYear, plotAge, exposition, PC1, PC2, PC3, ffh, changeType, vegetationCov, targetRichness, targetCov, ffh6510Richness, ffh6210Richness) %>%",
        "+ ",
        "  mutate(surveyYearF = as_factor(surveyYear))",
        "\u001B[36mi\u001B[39m Using \u001B[34m\u001B[34m','\u001B[34m\u001B[39m as decimal and \u001B[34m\u001B[34m'.'\u001B[34m\u001B[39m as grouping mark. Use \u001B[38;5;251m\u001B[48;5;235m\u001B[38;5;251m\u001B[48;5;235m`read_delim()`\u001B[48;5;235m\u001B[38;5;251m\u001B[49m\u001B[39m for more control.\n",
        "Warnung:",
        " 5 parsing failures.\nrow           col expected actual                       file\n 20 vegetationCov a double     -- 'data_processed_sites.csv'\n 38 vegetationCov a double     -- 'data_processed_sites.csv'\n130 vegetationCov a double     -- 'data_processed_sites.csv'\n143 vegetationCov a double     -- 'data_processed_sites.csv'\n147 vegetationCov a double     -- 'data_processed_sites.csv'\n\n",
        "> ",
        "species <- read_csv2(\"data_processed_species.csv\", col_names = T, na = \"na\", col_types = ",
        "+ ",
        "                      cols(",
        "+ ",
        "                        .default = \"d\",",
        "+ ",
        "                        name = \"f\"",
        "+ ",
        "                      )) %>%  ",
        "+ ",
        "  pivot_longer(-name, \"id\", \"value\") %>%",
        "+ ",
        "  pivot_wider(id, name) %>%",
        "+ ",
        "  arrange(id) %>%",
        "+ ",
        "  column_to_rownames(\"id\")",
        "\u001B[36mi\u001B[39m Using \u001B[34m\u001B[34m','\u001B[34m\u001B[39m as decimal and \u001B[34m\u001B[34m'.'\u001B[34m\u001B[39m as grouping mark. Use \u001B[38;5;251m\u001B[48;5;235m\u001B[38;5;251m\u001B[48;5;235m`read_delim()`\u001B[48;5;235m\u001B[38;5;251m\u001B[49m\u001B[39m for more control.\n",
        "> ",
        "sitesFFH <- sites %>%",
        "+ ",
        "  filter(ffh != \"6210\")",
        "> ",
        "speciesFFH <- species %>%",
        "+ ",
        "  rownames_to_column(\"id\") %>%",
        "+ ",
        "  semi_join(sitesFFH, by = \"id\") %>%",
        "+ ",
        "  column_to_rownames(\"id\")",
        "> ",
        "set.seed(1)",
        "> ",
        "(ordi <- metaMDS(species, try = 99, previous.best = T, na.rm = T))",
        "Square root transformation\nWisconsin double standardization\nRun 0 stress 0.9945792 \nRun 1 stress 0.2928154 \n... New best solution\n... Procrustes: rmse 0.07149706  max resid 0.9942417 \nRun 2 stress 0.2887688 \n... New best solution\n... Procrustes: rmse 0.02988268  max resid 0.1363145 \nRun 3 stress 0.2905863 \nRun 4 stress 0.2919397 \nRun 5 stress 0.3021739 \nRun 6 stress 0.2937295 \nRun 7 stress 0.3076253 \nRun 8 stress 0.2863851 \n... New best solution\n... Procrustes: rmse 0.01723618  max resid 0.1566162 \nRun 9 stress",
        " 0.2899024 \nRun 10 stress 0.289996 \nRun 11 stress 0.2944645 \nRun 12 stress 0.3073324 \nRun 13 stress 0.2891413 \nRun 14 stress 0.2871116 \nRun 15 stress 0.2939085 \nRun 16 stress 0.2927226 \nRun 17 stress 0.2996125 \nRun 18 stress 0.2964625 \nRun 19 stress 0.2957715 \nRun 20 stress 0.2873577 \nRun 21 stress 0.2888597 \nRun 22 stress 0.2916008 \nRun 23 stress 0.2872504 \nRun 24 stress 0.3098361 \nRun 25 stress 0.2863786 \n... New best solution\n... Procrustes: rmse 0.01449626  max resid 0.156943 \nRun 26 stress 0.2881569 \nRun",
        " 27 stress 0.2966624 \nRun 28 stress 0.2938005 \nRun 29 stress 0.2894149 \nRun 30 stress 0.2891767 \nRun 31 stress 0.2874951 \nRun 32 stress 0.2916803 \nRun 33 stress 0.2950707 \nRun 34 stress 0.2865959 \n... Procrustes: rmse 0.01205962  max resid 0.1576026 \nRun 35 stress 0.2978638 \nRun 36 stress 0.2909857 \nRun 37 stress 0.2892608 \nRun 38 stress 0.2941487 \nRun 39 stress 0.2888111 \nRun 40 stress 0.2958381 \nRun 41 stress 0.2907027 \nRun 42 stress 0.2917303 \nRun 43 stress 0.293562 \nRun 44 stress 0.2894173 \nRun 45 stress",
        " 0.3039235 \nRun 46 stress 0.290572 \nRun 47 stress 0.2878989 \nRun 48 stress 0.2864678 \n... Procrustes: rmse 0.01467514  max resid 0.1604267 \nRun 49 stress 0.2923839 \nRun 50 stress 0.2894863 \nRun 51 stress 0.2877825 \nRun 52 stress 0.2966825 \nRun 53 stress 0.2875139 \nRun 54 stress 0.2960885 \nRun 55 stress 0.2899054 \nRun 56 stress 0.2889881 \nRun 57 stress 0.2941177 \nRun 58 stress 0.2899087 \nRun 59 stress 0.2883988 \nRun 60 stress 0.2974998 \nRun 61 stress 0.300726 \nRun 62 stress 0.2951465 \nRun 63 stress 0.2887113",
        " \nRun 64 stress 0.2922885 \nRun 65 stress 0.2924667 \nRun 66 stress 0.2973271 \nRun 67 stress 0.2940484 \nRun 68 stress 0.2897919 \nRun 69 stress 0.2904303 \nRun 70 stress 0.2903585 \nRun 71 stress 0.2983771 \nRun 72 stress 0.2881088 \nRun 73 stress 0.304372 \nRun 74 stress 0.2914141 \nRun 75 stress 0.2997441 \nRun 76 stress 0.2885515 \nRun 77 stress 0.2926477 \nRun 78 stress 0.294172 \nRun 79 stress 0.2919599 \nRun 80 stress 0.2868102 \n... Procrustes: rmse 0.01885017  max resid 0.1576033 \nRun 81 stress 0.3033121 \nRun 82 stress",
        " 0.2883591 \nRun 83 stress 0.2899416 \nRun 84 stress 0.2990756 \nRun 85 stress 0.2934935 \nRun 86 stress 0.2909173 \nRun 87 stress 0.2893205 \nRun 88 stress 0.2873498 \nRun 89 stress 0.2932393 \nRun 90 stress 0.2912131 \nRun 91 stress 0.2918605 \nRun 92 stress 0.2913545 \nRun 93 stress 0.2901424 \nRun 94 stress 0.286419 \n... Procrustes: rmse 0.01456302  max resid 0.1568276 \nRun 95 stress 0.2919297 \nRun 96 stress 0.2960887 \nRun 97 stress 0.2886739 \nRun 98 stress 0.2993264 \nRun 99 stress 0.2916736 \n*** No convergence -- monoMDS stopping criteria:\n",
        "    27: no. of iterations >= maxit\n    70: stress ratio > sratmax\n     2: scale factor of the gradient < sfgrmin\n\nCall:\nmetaMDS(comm = species, try = 99, previous.best = T, na.rm = T) \n\nglobal Multidimensional Scaling using monoMDS\n\nData:     wisconsin(sqrt(species)) \nDistance: bray \n\nDimensions: 2 \nStress:     0.2863786 \nStress type 1, weak ties\nNo convergent solutions - best solution after 99 tries\nScaling: centring, PC rotation, halfchange scaling \nSpecies: expanded scores based on ‘wisconsin(sqrt(species))’",
        " \n\n",
        "> ",
        "stressplot(ordi)",
        "> ",
        "# stress: 0.286 (wisconsin(sqrt()))",
        "> ",
        "#R²linear = .593",
        "> ",
        "#R²non-metric = .918",
        "> ",
        "goodness(ordi)",
        "  [1] 0.01594296 0.02518341 0.02581594 0.01492294 0.02041426 0.02035205\n  [7] 0.01815489 0.02281807 0.02147736 0.02091337 0.02020618 0.02406772\n [13] 0.01565899 0.02919369 0.02957815 0.02478332 0.01724121 0.02205822\n [19] 0.01751650 0.02177634 0.02440860 0.01927349 0.01440305 0.01657535\n [25] 0.01593877 0.01801334 0.02267525 0.03201782 0.03008918 0.03179151\n [31] 0.01973098 0.02333963 0.01925320 0.02654354 0.02211602 0.02394075\n [37] 0.02076355 0.01627262 0.01488122 0.01777424 0.01627116 0.01510722\n [43] 0.02230739",
        " 0.02039200 0.02225797 0.02017288 0.02148086 0.01849053\n [49] 0.02225522 0.01922329 0.01563485 0.01931496 0.02216434 0.02062914\n [55] 0.01546020 0.01706390 0.01829490 0.02068118 0.02130444 0.03149211\n [61] 0.02344113 0.01270160 0.01365785 0.01299587 0.01538645 0.01413185\n [67] 0.01408660 0.01407700 0.01198433 0.01412825 0.01509881 0.02077882\n [73] 0.01975498 0.02239704 0.02072657 0.01516196 0.01440815 0.01939995\n [79] 0.01931357 0.01657596 0.01750860 0.02321179 0.02163122 0.02126599\n [85] 0.02628682 0.02541805",
        " 0.02432230 0.02196398 0.01610470 0.01721727\n [91] 0.01670037 0.01921323 0.02278074 0.02002057 0.01272112 0.01534725\n [97] 0.02300876 0.02189544 0.02117520 0.01335321 0.01451043 0.02384674\n[103] 0.01496771 0.02211523 0.01705063 0.02291197 0.02465939 0.01844057\n[109] 0.02946321 0.02620905 0.01868496 0.02671573 0.02354546 0.02006153\n[115] 0.02500112 0.02282918 0.02215159 0.02279978 0.02233105 0.02061191\n[121] 0.01842795 0.02560045 0.02384285 0.02265265 0.02134307 0.02292122\n[127] 0.01722354 0.02200587 0.02293517",
        " 0.02127629 0.01729264 0.01779869\n[133] 0.01324003 0.01911300 0.01733656 0.02234845 0.03233876 0.01797975\n[139] 0.01476557 0.01315733 0.02042617 0.01982975 0.02352723 0.02657229\n[145] 0.02062532 0.02089212 0.01658710 0.02186083 0.02331788 0.02512023\n[151] 0.02372763 0.02263265 0.02497444 0.02472918 0.01479601 0.01415585\n[157] 0.01183485 0.01574676 0.01249040 0.01605980 0.02361353 0.02286427\n[163] 0.01879753 0.02768321 0.02454369 0.02068968 0.01662898 0.01923835\n[169] 0.01594931 0.02775336 0.02747719 0.02712376",
        " 0.02073243 0.01502850\n[175] 0.01876199 0.01390996 0.01668996 0.01411734 0.01822496 0.01736902\n[181] 0.01608128 0.02612742 0.01883152 0.02673561 0.01926699 0.01472567\n[187] 0.01526447 0.01445530 0.01592450 0.01716165 0.01526049 0.01268369\n[193] 0.01700073 0.02041930 0.01516358\n",
        "> ",
        "# stress: 0.286 (wisconsin(sqrt()))",
        "> ",
        "#R²linear = .593",
        "> ",
        "#R²non-metric = .918",
        "> ",
        "gof <- goodness(ordi)",
        "> ",
        "plot(ordi, type = \"t\", main = \"Goodness of fit\")",
        "> ",
        "points(ordi = \"sites\", cex = gof * 300)",
        "Fehler in xy.coords(x, y) : Argument \"x\" fehlt (ohne Standardwert)\n",
        "> ",
        "points(ordi, display = \"sites\", cex = gof * 300)",
        "> ",
        "#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
        "> ",
        "# A Preparation ################################################################################################################",
        "> ",
        "#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "### Packages ###",
        "> ",
        "library(here)",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(vegan)",
        "> ",
        "",
        "> ",
        "### Start ###",
        "> ",
        "rm(list = ls())",
        "> ",
        "setwd(here(\"data/processed\"))",
        "> ",
        "",
        "> ",
        "### Load data ###",
        "> ",
        "sites <- read_csv2(\"data_processed_sites.csv\", col_names = T, na = \"na\", col_types = ",
        "+ ",
        "                     cols(",
        "+ ",
        "                       .default = \"?\",",
        "+ ",
        "                       id = \"f\",",
        "+ ",
        "                       location = \"f\",",
        "+ ",
        "                       block = \"f\",",
        "+ ",
        "                       plot = \"f\",",
        "+ ",
        "                       exposition = \"f\",",
        "+ ",
        "                       ffh = \"f\",",
        "+ ",
        "                       vegetationCov = \"d\"",
        "+ ",
        "                     )) %>%",
        "+ ",
        "  select(id, plot, block, location, surveyYear, constructionYear, plotAge, exposition, PC1, PC2, PC3, ffh, changeType, vegetationCov, targetRichness, targetCov, ffh6510Richness, ffh6210Richness) %>%",
        "+ ",
        "  mutate(surveyYearF = as_factor(surveyYear))",
        "\u001B[36mi\u001B[39m Using \u001B[34m\u001B[34m','\u001B[34m\u001B[39m as decimal and \u001B[34m\u001B[34m'.'\u001B[34m\u001B[39m as grouping mark. Use \u001B[38;5;251m\u001B[48;5;235m\u001B[38;5;251m\u001B[48;5;235m`read_delim()`\u001B[48;5;235m\u001B[38;5;251m\u001B[49m\u001B[39m for more control.\n",
        "Warnung:",
        " 5 parsing failures.\nrow           col expected actual                       file\n 20 vegetationCov a double     -- 'data_processed_sites.csv'\n 38 vegetationCov a double     -- 'data_processed_sites.csv'\n130 vegetationCov a double     -- 'data_processed_sites.csv'\n143 vegetationCov a double     -- 'data_processed_sites.csv'\n147 vegetationCov a double     -- 'data_processed_sites.csv'\n\n",
        "> ",
        "",
        "> ",
        "species <- read_csv2(\"data_processed_species.csv\", col_names = T, na = \"na\", col_types = ",
        "+ ",
        "                       cols(",
        "+ ",
        "                         .default = \"d\",",
        "+ ",
        "                         name = \"f\"",
        "+ ",
        "                       )) %>%  ",
        "+ ",
        "  pivot_longer(-name, \"id\", \"value\") %>%",
        "+ ",
        "  pivot_wider(id, name) %>%",
        "+ ",
        "  arrange(id) %>%",
        "+ ",
        "  column_to_rownames(\"id\")",
        "\u001B[36mi\u001B[39m Using \u001B[34m\u001B[34m','\u001B[34m\u001B[39m as decimal and \u001B[34m\u001B[34m'.'\u001B[34m\u001B[39m as grouping mark. Use \u001B[38;5;251m\u001B[48;5;235m\u001B[38;5;251m\u001B[48;5;235m`read_delim()`\u001B[48;5;235m\u001B[38;5;251m\u001B[49m\u001B[39m for more control.\n",
        "> ",
        "",
        "> ",
        "sitesFFH <- sites %>%",
        "+ ",
        "  filter(ffh != \"6210\")",
        "> ",
        "speciesFFH <- species %>%",
        "+ ",
        "  rownames_to_column(\"id\") %>%",
        "+ ",
        "  semi_join(sitesFFH, by = \"id\") %>%",
        "+ ",
        "  column_to_rownames(\"id\")",
        "> ",
        "View(sites)",
        "> ",
        "View(sitesFFH)",
        "> ",
        "### Load data ###",
        "> ",
        "sites <- read_csv2(\"data_processed_sites.csv\", col_names = T, na = \"na\", col_types = ",
        "+ ",
        "                     cols(",
        "+ ",
        "                       .default = \"?\",",
        "+ ",
        "                       id = \"f\",",
        "+ ",
        "                       locationAbb = \"f\",",
        "+ ",
        "                       block = \"f\",",
        "+ ",
        "                       plot = \"f\",",
        "+ ",
        "                       exposition = \"f\",",
        "+ ",
        "                       ffh = \"f\",",
        "+ ",
        "                       vegetationCov = \"d\"",
        "+ ",
        "                     )) %>%",
        "+ ",
        "  select(id, plot, block, locationAbb, surveyYear, constructionYear, plotAge, exposition, PC1, PC2, PC3, ffh, changeType, vegetationCov, targetRichness, targetCov, ffh6510Richness, ffh6210Richness) %>%",
        "+ ",
        "  mutate(surveyYearF = as_factor(surveyYear))",
        "\u001B[36mi\u001B[39m Using \u001B[34m\u001B[34m','\u001B[34m\u001B[39m as decimal and \u001B[34m\u001B[34m'.'\u001B[34m\u001B[39m as grouping mark. Use \u001B[38;5;251m\u001B[48;5;235m\u001B[38;5;251m\u001B[48;5;235m`read_delim()`\u001B[48;5;235m\u001B[38;5;251m\u001B[49m\u001B[39m for more control.\n",
        "Warnung:",
        " 5 parsing failures.\nrow           col expected actual                       file\n 20 vegetationCov a double     -- 'data_processed_sites.csv'\n 38 vegetationCov a double     -- 'data_processed_sites.csv'\n130 vegetationCov a double     -- 'data_processed_sites.csv'\n143 vegetationCov a double     -- 'data_processed_sites.csv'\n147 vegetationCov a double     -- 'data_processed_sites.csv'\n\n",
        "> ",
        "### Load data ###",
        "> ",
        "sites <- read_csv2(\"data_processed_sites.csv\", col_names = T, na = \"na\", col_types = ",
        "+ ",
        "                     cols(",
        "+ ",
        "                       .default = \"?\",",
        "+ ",
        "                       id = \"f\",",
        "+ ",
        "                       locationAbb = \"f\",",
        "+ ",
        "                       block = \"f\",",
        "+ ",
        "                       plot = \"f\",",
        "+ ",
        "                       exposition = \"f\",",
        "+ ",
        "                       ffh = \"f\",",
        "+ ",
        "                       vegetationCov = \"n\"",
        "+ ",
        "                     )) %>%",
        "+ ",
        "  select(id, plot, block, locationAbb, surveyYear, constructionYear, plotAge, exposition, PC1, PC2, PC3, ffh, changeType, vegetationCov, targetRichness, targetCov, ffh6510Richness, ffh6210Richness) %>%",
        "+ ",
        "  mutate(surveyYearF = as_factor(surveyYear))",
        "\u001B[36mi\u001B[39m Using \u001B[34m\u001B[34m','\u001B[34m\u001B[39m as decimal and \u001B[34m\u001B[34m'.'\u001B[34m\u001B[39m as grouping mark. Use \u001B[38;5;251m\u001B[48;5;235m\u001B[38;5;251m\u001B[48;5;235m`read_delim()`\u001B[48;5;235m\u001B[38;5;251m\u001B[49m\u001B[39m for more control.\n",
        "Warnung:",
        " 5 parsing failures.\nrow           col expected actual                       file\n 20 vegetationCov a number     -- 'data_processed_sites.csv'\n 38 vegetationCov a number     -- 'data_processed_sites.csv'\n130 vegetationCov a number     -- 'data_processed_sites.csv'\n143 vegetationCov a number     -- 'data_processed_sites.csv'\n147 vegetationCov a number     -- 'data_processed_sites.csv'\n\n",
        "> ",
        "### Load data ###",
        "> ",
        "sites <- read_csv2(\"data_processed_sites.csv\", col_names = T, na = \"na\", col_types = ",
        "+ ",
        "                     cols(",
        "+ ",
        "                       .default = \"?\",",
        "+ ",
        "                       id = \"f\",",
        "+ ",
        "                       locationAbb = \"f\",",
        "+ ",
        "                       block = \"f\",",
        "+ ",
        "                       plot = \"f\",",
        "+ ",
        "                       exposition = \"f\",",
        "+ ",
        "                       ffh = \"f\",",
        "+ ",
        "                       vegetationCov = \"d\"",
        "+ ",
        "                     )) %>%",
        "+ ",
        "  select(id, plot, block, locationAbb, surveyYear, constructionYear, plotAge, exposition, PC1, PC2, PC3, ffh, changeType, vegetationCov, targetRichness, targetCov, ffh6510Richness, ffh6210Richness) %>%",
        "+ ",
        "  mutate(surveyYearF = as_factor(surveyYear))",
        "\u001B[36mi\u001B[39m Using \u001B[34m\u001B[34m','\u001B[34m\u001B[39m as decimal and \u001B[34m\u001B[34m'.'\u001B[34m\u001B[39m as grouping mark. Use \u001B[38;5;251m\u001B[48;5;235m\u001B[38;5;251m\u001B[48;5;235m`read_delim()`\u001B[48;5;235m\u001B[38;5;251m\u001B[49m\u001B[39m for more control.\n",
        "Warnung:",
        " 5 parsing failures.\nrow           col expected actual                       file\n 20 vegetationCov a double     -- 'data_processed_sites.csv'\n 38 vegetationCov a double     -- 'data_processed_sites.csv'\n130 vegetationCov a double     -- 'data_processed_sites.csv'\n143 vegetationCov a double     -- 'data_processed_sites.csv'\n147 vegetationCov a double     -- 'data_processed_sites.csv'\n\n",
        "> ",
        "### Load data ###",
        "> ",
        "sites <- read_csv2(\"data_processed_sites.csv\", col_names = T, na = c(\"na\", \"NA\"), col_types = ",
        "+ ",
        "                     cols(",
        "+ ",
        "                       .default = \"?\",",
        "+ ",
        "                       id = \"f\",",
        "+ ",
        "                       locationAbb = \"f\",",
        "+ ",
        "                       block = \"f\",",
        "+ ",
        "                       plot = \"f\",",
        "+ ",
        "                       exposition = \"f\",",
        "+ ",
        "                       ffh = \"f\",",
        "+ ",
        "                       vegetationCov = \"d\"",
        "+ ",
        "                     )) %>%",
        "+ ",
        "  select(id, plot, block, locationAbb, surveyYear, constructionYear, plotAge, exposition, PC1, PC2, PC3, ffh, changeType, vegetationCov, targetRichness, targetCov, ffh6510Richness, ffh6210Richness) %>%",
        "+ ",
        "  mutate(surveyYearF = as_factor(surveyYear))",
        "\u001B[36mi\u001B[39m Using \u001B[34m\u001B[34m','\u001B[34m\u001B[39m as decimal and \u001B[34m\u001B[34m'.'\u001B[34m\u001B[39m as grouping mark. Use \u001B[38;5;251m\u001B[48;5;235m\u001B[38;5;251m\u001B[48;5;235m`read_delim()`\u001B[48;5;235m\u001B[38;5;251m\u001B[49m\u001B[39m for more control.\n",
        "> ",
        "sitessoil <- sites %>%",
        "+ ",
        "  select(id, PC1, PC2, PC3)",
        "> ",
        "sitesspacetime <- sites %>%",
        "+ ",
        "  select(id, locationAbb, surveyYearF, plotAge)",
        "> ",
        "(part <- varpart(species, sitessoil, sitesspacetime))",
        "\nPartition of variance in RDA \n\nCall: varpart(Y = species, X = sitessoil, sitesspacetime)\n\nExplanatory tables:\nX1:  sitessoil\nX2:  sitesspacetime \n\nNo. of explanatory tables: 2 \nTotal variation (SS): 256725 \n            Variance: 1323.3 \nNo. of observations: 195 \n\nPartition table:\n                      Df R.squared Adj.R.squared Testable\n[a+b] = X1           194         1                   TRUE\n[b+c] = X2           194         1                   TRUE\n[a+b+c] = X1+X2      194         1                   TRUE",
        "\nIndividual fractions                                     \n[a] = X1|X2            0                            FALSE\n[b]                    0                            FALSE\n[c] = X2|X1            0                            FALSE\n[d] = Residuals                                     FALSE\n---\nUse function ‘rda’ to test significance of fractions of interest\n",
        "Warnmeldungen:\n",
        "1: collinearity detected in X1: mm = 197, m = 194 \n",
        "2: collinearity detected in X2: mm = 213, m = 194 \n",
        "3: collinearity detected in cbind(X1,X2): mm = 410, m = 194 \n",
        "4: collinearity detected: redundant variable(s)  between tables X1, X2\nresults are probably incorrect: remove redundant variable(s) and repeat the analysis \n",
        "> ",
        "(m1 <- varpart(species, sitessoil, sitesspacetime))",
        "\nPartition of variance in RDA \n\nCall: varpart(Y = species, X = sitessoil, sitesspacetime)\n\nExplanatory tables:\nX1:  sitessoil\nX2:  sitesspacetime \n\nNo. of explanatory tables: 2 \nTotal variation (SS): 256725 \n            Variance: 1323.3 \nNo. of observations: 195 \n\nPartition table:\n                      Df R.squared Adj.R.squared Testable\n[a+b] = X1           194         1                   TRUE\n[b+c] = X2           194         1                   TRUE\n[a+b+c] = X1+X2      194         1                   TRUE",
        "\nIndividual fractions                                     \n[a] = X1|X2            0                            FALSE\n[b]                    0                            FALSE\n[c] = X2|X1            0                            FALSE\n[d] = Residuals                                     FALSE\n---\nUse function ‘rda’ to test significance of fractions of interest\n",
        "Warnmeldungen:\n",
        "1: collinearity detected in X1: mm = 197, m = 194 \n",
        "2: collinearity detected in X2: mm = 213, m = 194 \n",
        "3: collinearity detected in cbind(X1,X2): mm = 410, m = 194 \n",
        "4: collinearity detected: redundant variable(s)  between tables X1, X2\nresults are probably incorrect: remove redundant variable(s) and repeat the analysis \n",
        "> ",
        "sitesspacetime <- sites %>%",
        "+ ",
        "  select(id, locationAbb, surveyYearF)",
        "> ",
        "set.seed(1)",
        "> ",
        "(m1 <- varpart(species, sitessoil, sitesspacetime))",
        "\nPartition of variance in RDA \n\nCall: varpart(Y = species, X = sitessoil, sitesspacetime)\n\nExplanatory tables:\nX1:  sitessoil\nX2:  sitesspacetime \n\nNo. of explanatory tables: 2 \nTotal variation (SS): 256725 \n            Variance: 1323.3 \nNo. of observations: 195 \n\nPartition table:\n                      Df R.squared Adj.R.squared Testable\n[a+b] = X1           194         1                   TRUE\n[b+c] = X2           194         1                   TRUE\n[a+b+c] = X1+X2      194         1                   TRUE",
        "\nIndividual fractions                                     \n[a] = X1|X2            0                            FALSE\n[b]                    0                            FALSE\n[c] = X2|X1            0                            FALSE\n[d] = Residuals                                     FALSE\n---\nUse function ‘rda’ to test significance of fractions of interest\n",
        "Warnmeldungen:\n",
        "1: collinearity detected in X1: mm = 197, m = 194 \n",
        "2: collinearity detected in X2: mm = 212, m = 194 \n",
        "3: collinearity detected in cbind(X1,X2): mm = 409, m = 194 \n",
        "4: collinearity detected: redundant variable(s)  between tables X1, X2\nresults are probably incorrect: remove redundant variable(s) and repeat the analysis \n",
        "> ",
        "plot(m1, digits = 2, bg = c(\"red\", \"blue\"))",
        "> ",
        "plot(m1, digits = 2, bg = c(\"red\", \"blue\"))",
        "> ",
        "plot(m1, cutoff = 1, digits = 2, bg = c(\"red\", \"blue\"))",
        "> ",
        "plot(m1, cutoff = 0, digits = 2, bg = c(\"red\", \"blue\"))",
        "> ",
        "library(ade4)",
        "> ",
        "library(adegraphics)",
        "Registered S3 methods overwritten by 'adegraphics':\n  method         from\n  biplot.dudi    ade4\n  kplot.foucart  ade4\n  kplot.mcoa     ade4\n  kplot.mfa      ade4\n  kplot.pta      ade4\n  kplot.sepan    ade4\n  kplot.statis   ade4\n  scatter.coa    ade4\n  scatter.dudi   ade4\n  scatter.nipals ade4\n  scatter.pco    ade4\n  score.acm      ade4\n  score.mix      ade4\n  score.pca      ade4\n  screeplot.dudi ade4\n",
        "\nAttache Paket: ‘adegraphics’\n\n",
        "The following objects are masked from ‘package:ade4’:\n\n    kplotsepan.coa, s.arrow, s.class, s.corcircle, s.distri, s.image,\n    s.label, s.logo, s.match, s.traject, s.value, table.value,\n    triangle.class\n\n",
        "> ",
        "library(adespatial)",
        "Registered S3 method overwritten by 'spdep':\n  method   from\n  plot.mst ape \n",
        "Registered S3 methods overwritten by 'adespatial':\n  method             from       \n  plot.multispati    adegraphics\n  print.multispati   ade4       \n  summary.multispati ade4       \n",
        "\nAttache Paket: ‘adespatial’\n\n",
        "The following object is masked from ‘package:ade4’:\n\n    multispati\n\n",
        "> ",
        "library(vegan)",
        "> ",
        "library(vegan3d)",
        "> ",
        "library(MASS)",
        "\nAttache Paket: ‘MASS’\n\n",
        "The following object is masked from ‘package:dplyr’:\n\n    select\n\n",
        "> ",
        "library(ellipse)",
        "\nAttache Paket: ‘ellipse’\n\n",
        "The following object is masked from ‘package:graphics’:\n\n    pairs\n\n",
        "> ",
        "library(FactoMineR)",
        "\nAttache Paket: ‘FactoMineR’\n\n",
        "The following object is masked from ‘package:ade4’:\n\n    reconst\n\n",
        "> ",
        "library(rrcov)",
        "Lade nötiges Paket: robustbase\n",
        "Scalable Robust Estimators with High Breakdown Point (version 1.5-5)\n\n",
        "> ",
        "# Source additional functions that will be used later in this",
        "> ",
        "# Chapter. Our scripts assume that files to be read are in",
        "> ",
        "# the working directory.",
        "> ",
        "source(\"hcoplot.R\")",
        "Fehler in file(filename, \"r\", encoding = encoding) : \n  kann Verbindung nicht öffnen\n",
        "Zusätzlich: ",
        "Warnmeldung:\n",
        "In file(filename, \"r\", encoding = encoding) :",
        "\n ",
        " kann Datei 'hcoplot.R' nicht öffnen: No such file or directory\n",
        "> ",
        "source(\"triplot.rda.R\")",
        "Fehler in file(filename, \"r\", encoding = encoding) : \n  kann Verbindung nicht öffnen\n",
        "Zusätzlich: ",
        "Warnmeldung:\n",
        "In file(filename, \"r\", encoding = encoding) :",
        "\n ",
        " kann Datei 'triplot.rda.R' nicht öffnen: No such file or directory\n",
        "> ",
        "source(\"plot.lda.R\")",
        "Fehler in file(filename, \"r\", encoding = encoding) : \n  kann Verbindung nicht öffnen\n",
        "Zusätzlich: ",
        "Warnmeldung:\n",
        "In file(filename, \"r\", encoding = encoding) :",
        "\n ",
        " kann Datei 'plot.lda.R' nicht öffnen: No such file or directory\n",
        "> ",
        "source(\"polyvars.R\")",
        "Fehler in file(filename, \"r\", encoding = encoding) : \n  kann Verbindung nicht öffnen\n",
        "Zusätzlich: ",
        "Warnmeldung:\n",
        "In file(filename, \"r\", encoding = encoding) :",
        "\n ",
        " kann Datei 'polyvars.R' nicht öffnen: No such file or directory\n",
        "> ",
        "source(\"screestick.R\")",
        "Fehler in file(filename, \"r\", encoding = encoding) : \n  kann Verbindung nicht öffnen\n",
        "Zusätzlich: ",
        "Warnmeldung:\n",
        "In file(filename, \"r\", encoding = encoding) :",
        "\n ",
        " kann Datei 'screestick.R' nicht öffnen: No such file or directory\n",
        "> ",
        "",
        "> ",
        "# Load the Doubs data. The file Doubs.Rdata is assumed to be in ",
        "> ",
        "# the working directory",
        "> ",
        "load(\"Doubs.RData\")  ",
        "Fehler in readChar(con, 5L, useBytes = TRUE) : \n  kann Verbindung nicht öffnen\n",
        "Zusätzlich: ",
        "Warnmeldung:\n",
        "In readChar(con, 5L, useBytes = TRUE) :",
        "\n ",
        " kann komprimierte Datei 'Doubs.RData' nicht öffnen. Grund evtl. 'No such file or directory'\n",
        "> ",
        "# Set aside the variable 'dfs' (distance from the source) for ",
        "> ",
        "# later use",
        "> ",
        "dfs <- env[, 1]",
        "Fehler: Objekt 'env' nicht gefunden\n",
        "> ",
        "# Remove the 'dfs' variable from the env data frame",
        "> ",
        "env2 <- env[, -1]",
        "Fehler: Objekt 'env' nicht gefunden\n",
        "> ",
        "# Recode the slope variable (slo) into a factor (qualitative) ",
        "> ",
        "# variable to show how these are handled in the ordinations",
        "> ",
        "slo2 <- rep(\".very_steep\", nrow(env))",
        "Fehler in nrow(env) : Objekt 'env' nicht gefunden\n",
        "> ",
        "slo2[env$slo <= quantile(env$slo)[4]] <- \".steep\"",
        "Fehler in slo2[env$slo <= quantile(env$slo)[4]] <- \".steep\" : \n  Objekt 'slo2' nicht gefunden\n",
        "> ",
        "slo2[env$slo <= quantile(env$slo)[3]] <- \".moderate\"",
        "Fehler in slo2[env$slo <= quantile(env$slo)[3]] <- \".moderate\" : \n  Objekt 'slo2' nicht gefunden\n",
        "> ",
        "slo2[env$slo <= quantile(env$slo)[2]] <- \".low\"",
        "Fehler in slo2[env$slo <= quantile(env$slo)[2]] <- \".low\" : \n  Objekt 'slo2' nicht gefunden\n",
        "> ",
        "slo2 <- factor(slo2, ",
        "+ ",
        "               levels = c(\".low\", \".moderate\", \".steep\", \".very_steep\"))",
        "Fehler in factor(slo2, levels = c(\".low\", \".moderate\", \".steep\", \".very_steep\")) : \n  Objekt 'slo2' nicht gefunden\n",
        "> ",
        "table(slo2)",
        "Fehler in table(slo2) : Objekt 'slo2' nicht gefunden\n",
        "> ",
        "# Create an env3 data frame with slope as a qualitative variable",
        "> ",
        "env3 <- env2",
        "Fehler: Objekt 'env2' nicht gefunden\n",
        "> ",
        "env3$slo <- slo2",
        "Fehler: Objekt 'slo2' nicht gefunden\n",
        "> ",
        "# Subset 1: Physiography (upstream-downstream gradient)",
        "> ",
        "envtopo <- env2[, c(1 : 3)]",
        "Fehler: Objekt 'env2' nicht gefunden\n",
        "> ",
        "names(envtopo)",
        "Fehler: Objekt 'envtopo' nicht gefunden\n",
        "> ",
        "# Subset 2: Water quality",
        "> ",
        "envchem <- env2[, c(4 : 10)]",
        "Fehler: Objekt 'env2' nicht gefunden\n",
        "> ",
        "names(envchem)",
        "Fehler: Objekt 'envchem' nicht gefunden\n",
        "> ",
        "# Hellinger-transform the species data set",
        "> ",
        "spe.hel <- decostand(spe, \"hellinger\")",
        "Fehler in is.data.frame(x) : Objekt 'spe' nicht gefunden\n",
        "> ",
        "### Start ###",
        "> ",
        "rm(list = ls())",
        "> ",
        "library(ade4)",
        "> ",
        "library(adegraphics)",
        "> ",
        "library(adespatial)",
        "> ",
        "library(vegan)",
        "> ",
        "library(vegan3d)",
        "> ",
        "library(MASS)",
        "> ",
        "library(ellipse)",
        "> ",
        "library(FactoMineR)",
        "> ",
        "library(rrcov)",
        "> ",
        "# Source additional functions that will be used later in this",
        "> ",
        "# Chapter. Our scripts assume that files to be read are in",
        "> ",
        "# the working directory.",
        "> ",
        "source(\"hcoplot.R\")",
        "Fehler in file(filename, \"r\", encoding = encoding) : \n  kann Verbindung nicht öffnen\n",
        "Zusätzlich: ",
        "Warnmeldung:\n",
        "In file(filename, \"r\", encoding = encoding) :",
        "\n ",
        " kann Datei 'hcoplot.R' nicht öffnen: No such file or directory\n",
        "> ",
        "source(\"triplot.rda.R\")",
        "Fehler in file(filename, \"r\", encoding = encoding) : \n  kann Verbindung nicht öffnen\n",
        "Zusätzlich: ",
        "Warnmeldung:\n",
        "In file(filename, \"r\", encoding = encoding) :",
        "\n ",
        " kann Datei 'triplot.rda.R' nicht öffnen: No such file or directory\n",
        "> ",
        "source(\"plot.lda.R\")",
        "Fehler in file(filename, \"r\", encoding = encoding) : \n  kann Verbindung nicht öffnen\n",
        "Zusätzlich: ",
        "Warnmeldung:\n",
        "In file(filename, \"r\", encoding = encoding) :",
        "\n ",
        " kann Datei 'plot.lda.R' nicht öffnen: No such file or directory\n",
        "> ",
        "source(\"polyvars.R\")",
        "Fehler in file(filename, \"r\", encoding = encoding) : \n  kann Verbindung nicht öffnen\n",
        "Zusätzlich: ",
        "Warnmeldung:\n",
        "In file(filename, \"r\", encoding = encoding) :",
        "\n ",
        " kann Datei 'polyvars.R' nicht öffnen: No such file or directory\n",
        "> ",
        "source(\"screestick.R\")",
        "Fehler in file(filename, \"r\", encoding = encoding) : \n  kann Verbindung nicht öffnen\n",
        "Zusätzlich: ",
        "Warnmeldung:\n",
        "In file(filename, \"r\", encoding = encoding) :",
        "\n ",
        " kann Datei 'screestick.R' nicht öffnen: No such file or directory\n",
        "> ",
        "# Load the Doubs data. The file Doubs.Rdata is assumed to be in ",
        "> ",
        "# the working directory",
        "> ",
        "load(\"Doubs.RData\")  ",
        "Fehler in readChar(con, 5L, useBytes = TRUE) : \n  kann Verbindung nicht öffnen\n",
        "Zusätzlich: ",
        "Warnmeldung:\n",
        "In readChar(con, 5L, useBytes = TRUE) :",
        "\n ",
        " kann komprimierte Datei 'Doubs.RData' nicht öffnen. Grund evtl. 'No such file or directory'\n",
        "> ",
        "# Load the Doubs data. The file Doubs.Rdata is assumed to be in ",
        "> ",
        "# the working directory",
        "> ",
        "load(\"Doubs.RData\")  ",
        "Fehler in readChar(con, 5L, useBytes = TRUE) : \n  kann Verbindung nicht öffnen\n",
        "Zusätzlich: ",
        "Warnmeldung:\n",
        "In readChar(con, 5L, useBytes = TRUE) :",
        "\n ",
        " kann komprimierte Datei 'Doubs.RData' nicht öffnen. Grund evtl. 'No such file or directory'\n",
        "> ",
        "library(vegan)",
        "> ",
        "# Load the Doubs data. The file Doubs.Rdata is assumed to be in ",
        "> ",
        "# the working directory",
        "> ",
        "load(\"Doubs.RData\")  ",
        "Fehler in readChar(con, 5L, useBytes = TRUE) : \n  kann Verbindung nicht öffnen\n",
        "Zusätzlich: ",
        "Warnmeldung:\n",
        "In readChar(con, 5L, useBytes = TRUE) :",
        "\n ",
        " kann komprimierte Datei 'Doubs.RData' nicht öffnen. Grund evtl. 'No such file or directory'\n",
        "> ",
        "load(\"C:/Users/marku/Downloads/NEwR-2ed_code_data/NEwR-2ed_code_data/NEwR2-Data/Doubs.RData\")",
        "> ",
        "# Remove empty site 8",
        "> ",
        "spe <- spe[-8, ]",
        "> ",
        "env <- env[-8, ]",
        "> ",
        "spa <- spa[-8, ]",
        "> ",
        "# Set aside the variable 'dfs' (distance from the source) for ",
        "> ",
        "# later use",
        "> ",
        "dfs <- env[, 1]",
        "> ",
        "# Remove the 'dfs' variable from the env data frame",
        "> ",
        "env2 <- env[, -1]",
        "> ",
        "# Recode the slope variable (slo) into a factor (qualitative) ",
        "> ",
        "# variable to show how these are handled in the ordinations",
        "> ",
        "slo2 <- rep(\".very_steep\", nrow(env))",
        "> ",
        "slo2[env$slo <= quantile(env$slo)[4]] <- \".steep\"",
        "> ",
        "slo2[env$slo <= quantile(env$slo)[3]] <- \".moderate\"",
        "> ",
        "slo2[env$slo <= quantile(env$slo)[2]] <- \".low\"",
        "> ",
        "slo2 <- factor(slo2, ",
        "+ ",
        "               levels = c(\".low\", \".moderate\", \".steep\", \".very_steep\"))",
        "> ",
        "table(slo2)",
        "slo2\n       .low   .moderate      .steep .very_steep \n          8           8           6           7 \n",
        "> ",
        "# Create an env3 data frame with slope as a qualitative variable",
        "> ",
        "env3 <- env2",
        "> ",
        "env3$slo <- slo2",
        "> ",
        "# Subset 1: Physiography (upstream-downstream gradient)",
        "> ",
        "envtopo <- env2[, c(1 : 3)]",
        "> ",
        "names(envtopo)",
        "[1] \"ele\" \"slo\" \"dis\"\n",
        "> ",
        "# Subset 2: Water quality",
        "> ",
        "envchem <- env2[, c(4 : 10)]",
        "> ",
        "names(envchem)",
        "[1] \"pH\"  \"har\" \"pho\" \"nit\" \"amm\" \"oxy\" \"bod\"\n",
        "> ",
        "# Hellinger-transform the species data set",
        "> ",
        "spe.hel <- decostand(spe, \"hellinger\")",
        "> ",
        "View(envchem)",
        "> ",
        "View(envtopo)",
        "> ",
        "View(spe)",
        "> ",
        "View(spe.hel)",
        "> ",
        "(spe.rda <- rda(spe.hel ~ ., env3))",
        "Call: rda(formula = spe.hel ~ ele + slo + dis + pH + har + pho + nit +\namm + oxy + bod, data = env3)\n\n              Inertia Proportion Rank\nTotal          0.5025     1.0000     \nConstrained    0.3654     0.7271   12\nUnconstrained  0.1371     0.2729   16\nInertia is variance \n\nEigenvalues for constrained axes:\n   RDA1    RDA2    RDA3    RDA4    RDA5    RDA6    RDA7    RDA8    RDA9 \n0.22808 0.05370 0.03212 0.02321 0.00870 0.00722 0.00487 0.00292 0.00214 \n  RDA10   RDA11   RDA12 \n0.00116 0.00091 0.00034 \n\nEigenvalues for unconstrained axes:\n",
        "    PC1     PC2     PC3     PC4     PC5     PC6     PC7     PC8     PC9 \n0.04581 0.02814 0.01528 0.01399 0.00984 0.00767 0.00420 0.00331 0.00276 \n   PC10    PC11    PC12    PC13    PC14    PC15    PC16 \n0.00202 0.00175 0.00099 0.00059 0.00047 0.00021 0.00010 \n\n",
        "> ",
        "summary(spe.rda) # Scaling 2 (default)",
        "\nCall:\nrda(formula = spe.hel ~ ele + slo + dis + pH + har + pho + nit +      amm + oxy + bod, data = env3) \n\nPartitioning of variance:\n              Inertia Proportion\nTotal          0.5025     1.0000\nConstrained    0.3654     0.7271\nUnconstrained  0.1371     0.2729\n\nEigenvalues, and their contribution to the variance \n\nImportance of components:\n                        RDA1   RDA2    RDA3    RDA4     RDA5     RDA6     RDA7\nEigenvalue            0.2281 0.0537 0.03212 0.02321 0.008699 0.007218 0.004869\nProportion Explained ",
        " 0.4539 0.1069 0.06392 0.04618 0.017311 0.014363 0.009689\nCumulative Proportion 0.4539 0.5607 0.62466 0.67084 0.688155 0.702518 0.712207\n                          RDA8     RDA9    RDA10    RDA11     RDA12     PC1\nEigenvalue            0.002924 0.002141 0.001160 0.000914 0.0003405 0.04581\nProportion Explained  0.005819 0.004261 0.002308 0.001819 0.0006776 0.09116\nCumulative Proportion 0.718027 0.722287 0.724596 0.726415 0.7270922 0.81825\n                          PC2     PC3     PC4      PC5      PC6      PC7",
        "\nEigenvalue            0.02814 0.01528 0.01399 0.009841 0.007674 0.004201\nProportion Explained  0.05601 0.03042 0.02784 0.019583 0.015271 0.008361\nCumulative Proportion 0.87425 0.90467 0.93251 0.952090 0.967361 0.975722\n                           PC8      PC9     PC10     PC11      PC12      PC13\nEigenvalue            0.003311 0.002761 0.002017 0.001752 0.0009873 0.0005919\nProportion Explained  0.006588 0.005494 0.004013 0.003486 0.0019647 0.0011779\nCumulative Proportion 0.982310 0.987804 0.991818 0.995304 0.9972687",
        " 0.9984467\n                           PC14      PC15      PC16\nEigenvalue            0.0004674 0.0002128 0.0001004\nProportion Explained  0.0009301 0.0004234 0.0001998\nCumulative Proportion 0.9993767 0.9998002 1.0000000\n\nAccumulated constrained eigenvalues\nImportance of components:\n                        RDA1   RDA2    RDA3    RDA4     RDA5     RDA6     RDA7\nEigenvalue            0.2281 0.0537 0.03212 0.02321 0.008699 0.007218 0.004869\nProportion Explained  0.6243 0.1470 0.08791 0.06351 0.023808 0.019755 0.013326",
        "\nCumulative Proportion 0.6243 0.7712 0.85913 0.92264 0.946448 0.966202 0.979528\n                          RDA8     RDA9    RDA10    RDA11     RDA12\nEigenvalue            0.002924 0.002141 0.001160 0.000914 0.0003405\nProportion Explained  0.008003 0.005860 0.003175 0.002502 0.0009320\nCumulative Proportion 0.987532 0.993391 0.996566 0.999068 1.0000000\n\nScaling 2 for species and site scores\n* Species are scaled proportional to eigenvalues\n* Sites are unscaled: weighted dispersion equal on all dimensions\n* General scaling constant of scores: ",
        " 1.93676 \n\n\nSpecies scores\n\n         RDA1     RDA2      RDA3      RDA4      RDA5      RDA6\nCogo  0.13386  0.11619 -0.238205  0.018531  0.043161 -0.029728\nSatr  0.64240  0.06654  0.123649  0.181606 -0.009584  0.029785\nPhph  0.47477  0.07009 -0.010153 -0.115349 -0.045312 -0.030034\nBabl  0.36260  0.06966  0.041311 -0.190563 -0.046944  0.006446\nThth  0.13081  0.10707 -0.239273  0.043512  0.065818  0.003468\nTeso  0.06590  0.12471 -0.216916 -0.004228  0.021732 -0.004195\nChna -0.17416  0.06774 -0.008397 -0.016402 -0.079764",
        "  0.044700\nPato -0.12679  0.16050 -0.035692 -0.016060 -0.089638 -0.001905\nLele -0.07961  0.04200  0.007677 -0.059155 -0.033512 -0.121451\nSqce -0.10903 -0.17555 -0.090012 -0.168382  0.019417  0.008753\nBaba -0.18525  0.21152 -0.073101 -0.006901 -0.012999  0.040480\nAlbi -0.16059  0.15514 -0.014286 -0.002463 -0.060684  0.011025\nGogo -0.20538  0.02482 -0.007965 -0.017743 -0.049209 -0.096232\nEslu -0.10731  0.02857  0.090028  0.012339  0.075334 -0.057091\nPefl -0.09159  0.10509  0.070433 -0.057397  0.014063 -0.009913",
        "\nRham -0.20905  0.16004  0.025478  0.012081 -0.011453  0.022031\nLegi -0.22798  0.11121  0.018794 -0.009470 -0.027464  0.024518\nScer -0.16101  0.01353  0.041554  0.032367  0.054060 -0.094579\nCyca -0.17381  0.14903  0.022239  0.009535  0.005020 -0.005397\nTiti -0.14025  0.10636  0.078279 -0.122633  0.054114  0.031262\nAbbr -0.18596  0.12223  0.053808  0.026142  0.043877  0.014596\nIcme -0.14631  0.08899  0.061818  0.034746  0.083492  0.004417\nGyce -0.30883  0.01606  0.039351  0.029260 -0.011189 -0.052403\nRuru -0.31982",
        " -0.16596 -0.018193 -0.115462  0.054397  0.064760\nBlbj -0.23901  0.09089  0.051566  0.010197  0.006795  0.036516\nAlal -0.43215 -0.22643 -0.108131  0.138837 -0.083787  0.008447\nAnan -0.19440  0.14152  0.033624  0.017384  0.008122  0.017637\n\n\nSite scores (weighted sums of species scores)\n\n       RDA1      RDA2     RDA3      RDA4      RDA5      RDA6\n1   0.40149 -0.154133  0.55506  1.601005  0.193044  0.916850\n2   0.53522 -0.025131  0.43393  0.294832 -0.518997  0.458849\n3   0.49429 -0.014617  0.49415  0.169258 -0.246061",
        "  0.163409\n4   0.33451  0.001188  0.51644 -0.320793  0.089569 -0.219820\n5   0.02794 -0.194202  0.44626 -0.559104  0.855973 -1.115731\n6   0.24422 -0.130758  0.41397 -0.696109  0.182246 -0.273498\n7   0.46589 -0.126054  0.31692 -0.137640 -0.549192 -0.061715\n9   0.03660 -0.605090 -0.06989 -1.261027  0.668699  1.165074\n10  0.31380 -0.198797  0.10795 -0.635022 -0.742828 -0.990209\n11  0.48116 -0.039713 -0.37858  0.181771  0.220972  0.254669\n12  0.49162  0.014144 -0.37992  0.162929  0.223012  0.324824\n13  0.49848  0.212240",
        " -0.67436  0.518502  0.399406  0.221762\n14  0.38203  0.229406 -0.75795  0.223281  0.515085 -0.139590\n15  0.28740  0.218549 -0.71897 -0.211161  0.175136 -0.553069\n16  0.09131  0.400116 -0.34437 -0.376171 -0.366402 -0.575447\n17 -0.05303  0.423927 -0.41000 -0.188493 -0.725181  0.151547\n18 -0.14182  0.385867 -0.36804 -0.217143 -0.643463 -0.001315\n19 -0.28203  0.275496 -0.01868 -0.371433 -0.692317 -0.062410\n20 -0.39681  0.209508  0.11549 -0.177920 -0.387207  0.048563\n21 -0.42850  0.278334  0.22003 -0.005965 -0.027098",
        " -0.042218\n22 -0.46552  0.251911  0.22773  0.040193  0.152844  0.032242\n23 -0.28125 -1.145589 -0.50524  0.300043 -0.003393  1.157109\n24 -0.40896 -0.752956 -0.26777  0.428883 -0.647205  0.643149\n25 -0.35207 -0.770295 -0.12183  0.459218  0.079646 -1.726015\n26 -0.46923  0.094061  0.23046  0.107850  0.310149  0.132668\n27 -0.47021  0.213629  0.24872  0.084194  0.331473  0.125540\n28 -0.47266  0.234036  0.27037  0.105748  0.381225  0.093844\n29 -0.37456  0.393349  0.10404  0.202063  0.282836  0.021890\n30 -0.48931  0.321574",
        "  0.31409  0.278210  0.488026 -0.150951\n\n\nSite constraints (linear combinations of constraining variables)\n\n       RDA1      RDA2     RDA3      RDA4      RDA5     RDA6\n1   0.55130  0.002681  0.47744  0.626961 -0.210684  0.31503\n2   0.29736  0.105880  0.64854  0.261364 -0.057127  0.09312\n3   0.36843 -0.185333  0.59805  0.324556 -0.001611  0.31093\n4   0.44346 -0.066361  0.33293 -0.344230 -0.279546 -0.37077\n5   0.27011 -0.366198  0.17981 -0.453385  0.717088 -0.06546\n6   0.37153 -0.255460  0.40850  0.217439  0.023667",
        "  0.34362\n7   0.53870 -0.180051  0.06858 -0.424883  0.024691 -0.33450\n9  -0.04449 -0.362495  0.12382 -1.180802  0.347707  0.26351\n10  0.16277 -0.154507  0.22276 -0.241254 -0.573552 -0.02867\n11  0.29917  0.176145 -0.08236  0.003881  0.164785 -0.44595\n12  0.36834  0.197386 -0.41118  0.300348 -0.054407 -0.01139\n13  0.42621  0.189915 -0.59777  0.100730  0.118292 -0.21017\n14  0.34364  0.134636 -0.80435  0.063271  0.664923  0.48131\n15  0.21379  0.236683 -0.56334 -0.001258 -0.029443  0.01667\n16  0.03055  0.352081 -0.12111",
        " -0.202394  0.058349 -0.43541\n17 -0.10455  0.178902 -0.26895  0.047230 -0.606989  0.21209\n18 -0.11134  0.221433 -0.23922 -0.302341 -0.248457 -0.01461\n19 -0.05501  0.311533 -0.30717  0.010160 -0.483226 -0.12857\n20 -0.25714  0.303597 -0.06796 -0.036783 -0.563627  0.13686\n21 -0.39194  0.196011  0.01884 -0.281096 -0.384228  0.39309\n22 -0.21352  0.180015  0.01099  0.074518 -0.036358 -0.02419\n23 -0.21653 -1.016935 -0.57283  0.548172  0.183282  0.51445\n24 -0.52592 -0.645869 -0.11144 -0.240019 -0.513190  0.32423\n25",
        " -0.38890 -0.867208 -0.08079  0.482904 -0.105956 -1.21316\n26 -0.48432  0.031753  0.14056 -0.114594  0.425603 -0.17981\n27 -0.61220  0.138310  0.32310 -0.015742  0.232652  0.38291\n28 -0.46930  0.460394  0.21938  0.078561  0.278048 -0.36507\n29 -0.38452  0.344856  0.20577  0.352846  0.504680  0.17755\n30 -0.42566  0.338206  0.24941  0.345838  0.404633 -0.13761\n\n\nBiplot scores for constraining variables\n\n                  RDA1      RDA2     RDA3     RDA4      RDA5     RDA6\nele             0.8239 -0.203027  0.46599",
        " -0.16932  0.003151  0.10413\nslo.moderate   -0.3592 -0.008707 -0.21727 -0.18287  0.158087  0.50092\nslo.steep       0.2791  0.155999 -0.06881  0.01921  0.176534 -0.15468\nslo.very_steep  0.6129 -0.148526  0.45392  0.03640 -0.190954 -0.04712\ndis            -0.7769  0.255048 -0.17494  0.30980  0.227429 -0.11932\npH              0.1023  0.178385 -0.30143  0.03941  0.298243  0.04856\nhar            -0.5722  0.044958 -0.56049 -0.14839  0.275283 -0.24521\npho            -0.4930 -0.650420 -0.19865  0.29287  0.056281 -0.39347",
        "\nnit            -0.7755 -0.203755 -0.23289  0.19739 -0.078644 -0.35079\namm            -0.4744 -0.687510 -0.16641  0.28475 -0.051257 -0.33858\noxy             0.7632  0.575392 -0.16436  0.08018 -0.136461  0.13748\nbod            -0.5171 -0.791730 -0.15644  0.22067  0.075935 -0.09106\n\n\nCentroids for factor constraints\n\n                  RDA1      RDA2     RDA3     RDA4     RDA5     RDA6\nslo.low        -0.2800  0.005549 -0.09029  0.07610 -0.07882 -0.18390\nslo.moderate   -0.2093 -0.005073 -0.12660 -0.10656  0.09212",
        "  0.29188\nslo.steep       0.1965  0.109846 -0.04845  0.01353  0.12431 -0.10892\nslo.very_steep  0.3908 -0.094698  0.28941  0.02321 -0.12175 -0.03004\n\n",
        "> ",
        "(spe.rda <- dbrda(spe.hel ~ ., env3))",
        "Call: dbrda(formula = spe.hel ~ ele + slo + dis + pH + har + pho + nit\n+ amm + oxy + bod, data = env3)\n\n              Inertia Proportion Rank\nTotal         14.0703     1.0000     \nConstrained   10.2304     0.7271   12\nUnconstrained  3.8399     0.2729   16\nInertia is squared Euclidean distance \n\nEigenvalues for constrained axes:\n dbRDA1  dbRDA2  dbRDA3  dbRDA4  dbRDA5  dbRDA6  dbRDA7  dbRDA8  dbRDA9 \n  6.386   1.504   0.899   0.650   0.244   0.202   0.136   0.082   0.060 \ndbRDA10 dbRDA11 dbRDA12 \n  0.032   0.026 ",
        "  0.010 \n\nEigenvalues for unconstrained axes:\n  MDS1   MDS2   MDS3   MDS4   MDS5   MDS6   MDS7   MDS8   MDS9  MDS10  MDS11 \n1.2826 0.7880 0.4280 0.3917 0.2755 0.2149 0.1176 0.0927 0.0773 0.0565 0.0491 \n MDS12  MDS13  MDS14  MDS15  MDS16 \n0.0276 0.0166 0.0131 0.0060 0.0028 \n\n",
        "> ",
        "summary(spe.rda) # Scaling 2 (default)",
        "\nCall:\ndbrda(formula = spe.hel ~ ele + slo + dis + pH + har + pho +      nit + amm + oxy + bod, data = env3) \n\nPartitioning of squared Euclidean distance:\n              Inertia Proportion\nTotal           14.07     1.0000\nConstrained     10.23     0.7271\nUnconstrained    3.84     0.2729\n\nEigenvalues, and their contribution to the squared Euclidean distance \n\nImportance of components:\n                      dbRDA1 dbRDA2  dbRDA3  dbRDA4  dbRDA5  dbRDA6   dbRDA7\nEigenvalue            6.3863 1.5035 0.89934 0.64976",
        " 0.24357 0.20210 0.136330\nProportion Explained  0.4539 0.1069 0.06392 0.04618 0.01731 0.01436 0.009689\nCumulative Proportion 0.4539 0.5607 0.62466 0.67084 0.68815 0.70252 0.712207\n                        dbRDA8   dbRDA9  dbRDA10  dbRDA11   dbRDA12    MDS1\nEigenvalue            0.081877 0.059948 0.032480 0.025593 0.0095346 1.28262\nProportion Explained  0.005819 0.004261 0.002308 0.001819 0.0006776 0.09116\nCumulative Proportion 0.718027 0.722287 0.724596 0.726415 0.7270922 0.81825\n                         MDS2",
        "    MDS3    MDS4    MDS5    MDS6     MDS7\nEigenvalue            0.78801 0.42796 0.39166 0.27555 0.21486 0.117639\nProportion Explained  0.05601 0.03042 0.02784 0.01958 0.01527 0.008361\nCumulative Proportion 0.87425 0.90467 0.93251 0.95209 0.96736 0.975722\n                          MDS8     MDS9    MDS10    MDS11    MDS12    MDS13\nEigenvalue            0.092698 0.077308 0.056470 0.049051 0.027644 0.016574\nProportion Explained  0.006588 0.005494 0.004013 0.003486 0.001965 0.001178\nCumulative Proportion 0.982310",
        " 0.987804 0.991818 0.995304 0.997269 0.998447\n                          MDS14     MDS15     MDS16\nEigenvalue            0.0130864 0.0059580 0.0028113\nProportion Explained  0.0009301 0.0004234 0.0001998\nCumulative Proportion 0.9993767 0.9998002 1.0000000\n\nAccumulated constrained eigenvalues\nImportance of components:\n                      dbRDA1 dbRDA2  dbRDA3  dbRDA4  dbRDA5  dbRDA6  dbRDA7\nEigenvalue            6.3863 1.5035 0.89934 0.64976 0.24357 0.20210 0.13633\nProportion Explained  0.6243 0.1470 0.08791",
        " 0.06351 0.02381 0.01975 0.01333\nCumulative Proportion 0.6243 0.7712 0.85913 0.92264 0.94645 0.96620 0.97953\n                        dbRDA8  dbRDA9  dbRDA10  dbRDA11  dbRDA12\nEigenvalue            0.081877 0.05995 0.032480 0.025593 0.009535\nProportion Explained  0.008003 0.00586 0.003175 0.002502 0.000932\nCumulative Proportion 0.987532 0.99339 0.996566 0.999068 1.000000\n\nScaling 2 for species and site scores\n* Species are scaled proportional to eigenvalues\n* Sites are unscaled: weighted dispersion equal on all dimensions\n",
        "* General scaling constant of scores:  4.45518 \n\n\nSite scores (weighted sums of species scores)\n\n     dbRDA1    dbRDA2   dbRDA3   dbRDA4    dbRDA5    dbRDA6\n1  -0.92356 -0.354557 -1.27681 -3.68283 -0.444063 -2.109054\n2  -1.23118 -0.057810 -0.99819 -0.67821  1.193862 -1.055502\n3  -1.13703 -0.033624 -1.13671 -0.38935  0.566021 -0.375895\n4  -0.76949  0.002733 -1.18797  0.73793 -0.206039  0.505657\n5  -0.06428 -0.446727 -1.02655  1.28612 -1.969019  2.566546\n6  -0.56178 -0.300787 -0.95227  1.60128 -0.419226  0.629134",
        "\n7  -1.07170 -0.289966 -0.72903  0.31662  1.263321  0.141964\n9  -0.08419 -1.391905  0.16077  2.90077 -1.538226 -2.680050\n10 -0.72184 -0.457297 -0.24832  1.46076  1.708746  2.277803\n11 -1.10682 -0.091353  0.87087 -0.41813 -0.508308 -0.585822\n12 -1.13088  0.032535  0.87395 -0.37479 -0.513001 -0.747202\n13 -1.14667  0.488222  1.55126 -1.19273 -0.918765 -0.510125\n14 -0.87879  0.527708  1.74352 -0.51362 -1.184863  0.321103\n15 -0.66110  0.502735  1.65387  0.48574 -0.402871  1.272240\n16 -0.21005  0.920398  0.79216  0.86532",
        "  0.842844  1.323715\n17  0.12198  0.975170  0.94313  0.43360  1.668153 -0.348607\n18  0.32624  0.887619  0.84662  0.49950  1.480174  0.003025\n19  0.64876  0.633731  0.04297  0.85442  1.592555  0.143564\n20  0.91280  0.481937 -0.26568  0.40927  0.890702 -0.111711\n21  0.98568  0.640258 -0.50613  0.01372  0.062335  0.097115\n22  1.07085  0.579478 -0.52386 -0.09246 -0.351592 -0.074166\n23  0.64697 -2.635228  1.16221 -0.69020  0.007806 -2.661729\n24  0.94074 -1.732045  0.61597 -0.98657  1.488782 -1.479453\n25  0.80987",
        " -1.771931  0.28025 -1.05635 -0.183212  3.970398\n26  1.07939  0.216371 -0.53012 -0.24809 -0.713444 -0.305179\n27  1.08164  0.491417 -0.57214 -0.19367 -0.762496 -0.288782\n28  1.08727  0.538360 -0.62194 -0.24325 -0.876943 -0.215872\n29  0.86161  0.904832 -0.23933 -0.46481 -0.650615 -0.050354\n30  1.12557  0.739726 -0.72250 -0.63997 -1.122618  0.347238\n\n\nSite constraints (linear combinations of constraining variables)\n\n     dbRDA1    dbRDA2   dbRDA3    dbRDA4    dbRDA5   dbRDA6\n1  -1.26816  0.006168 -1.09826 -1.442214",
        "  0.484643 -0.72466\n2  -0.68403  0.243559 -1.49186 -0.601222  0.131411 -0.21420\n3  -0.84752 -0.426327 -1.37572 -0.746585  0.003706 -0.71525\n4  -1.02010 -0.152652 -0.76584  0.791840  0.643047  0.85289\n5  -0.62135 -0.842375 -0.41361  1.042934 -1.649537  0.15058\n6  -0.85464 -0.587641 -0.93969 -0.500181 -0.054443 -0.79043\n7  -1.23919 -0.414176 -0.15777  0.977370 -0.056798  0.76945\n9   0.10234 -0.833857 -0.28483  2.716229 -0.799841 -0.60616\n10 -0.37443 -0.355416 -0.51243  0.554962  1.319357  0.06596\n11 -0.68819  0.405192",
        "  0.18946 -0.008927 -0.379060  1.02583\n12 -0.84729  0.454052  0.94584 -0.690898  0.125153  0.02620\n13 -0.98042  0.436866  1.37507 -0.231712 -0.272111  0.48346\n14 -0.79049  0.309708  1.85027 -0.145543 -1.529539 -1.10717\n15 -0.49178  0.544448  1.29588  0.002893  0.067728 -0.03835\n16 -0.07028  0.809901  0.27860  0.465572 -0.134221  1.00158\n17  0.24049  0.411532  0.61866 -0.108645  1.396272 -0.48789\n18  0.25613  0.509369  0.55029  0.695483  0.571532  0.03361\n19  0.12655  0.716628  0.70660 -0.023370  1.111578  0.29575",
        "\n20  0.59151  0.698372  0.15633  0.084613  1.296527 -0.31482\n21  0.90160  0.450889 -0.04333  0.646612  0.883849 -0.90423\n22  0.49117  0.414093 -0.02528 -0.171416  0.083634  0.05565\n23  0.49808 -2.339283  1.31771 -1.260975 -0.421609 -1.18339\n24  1.20980 -1.485711  0.25635  0.552121  1.180504 -0.74583\n25  0.89460 -1.994862  0.18585 -1.110837  0.243734  2.79066\n26  1.11410  0.073042 -0.32333  0.263603 -0.979026  0.41363\n27  1.40826  0.318159 -0.74324  0.036211 -0.535175 -0.88081\n28  1.07955  1.059056 -0.50465 -0.180715",
        " -0.639601  0.83979\n29  0.88452  0.793282 -0.47335 -0.811662 -1.160928 -0.40842\n30  0.97916  0.777984 -0.57373 -0.795541 -0.930787  0.31656\n\n\nBiplot scores for constraining variables\n\n                dbRDA1    dbRDA2   dbRDA3   dbRDA4    dbRDA5   dbRDA6\nele            -0.8239 -0.203027 -0.46599  0.16932 -0.003151 -0.10413\nslo.moderate    0.3592 -0.008707  0.21727  0.18287 -0.158087 -0.50092\nslo.steep      -0.2791  0.155999  0.06881 -0.01921 -0.176534  0.15468\nslo.very_steep -0.6129 -0.148526 -0.45392 -0.03640",
        "  0.190954  0.04712\ndis             0.7769  0.255048  0.17494 -0.30980 -0.227429  0.11932\npH             -0.1023  0.178385  0.30143 -0.03941 -0.298243 -0.04856\nhar             0.5722  0.044958  0.56049  0.14839 -0.275283  0.24521\npho             0.4930 -0.650420  0.19865 -0.29287 -0.056281  0.39347\nnit             0.7755 -0.203755  0.23289 -0.19739  0.078644  0.35079\namm             0.4744 -0.687510  0.16641 -0.28475  0.051257  0.33858\noxy            -0.7632  0.575392  0.16436 -0.08018  0.136461 -0.13748\nbod           ",
        "  0.5171 -0.791730  0.15644 -0.22067 -0.075935  0.09106\n\n\nCentroids for factor constraints\n\n                dbRDA1   dbRDA2  dbRDA3   dbRDA4  dbRDA5   dbRDA6\nslo.low         0.6441  0.01276  0.2077 -0.17506  0.1813  0.42304\nslo.moderate    0.4815 -0.01167  0.2912  0.24512 -0.2119 -0.67142\nslo.steep      -0.4520  0.25268  0.1115 -0.03112 -0.2859  0.25054\nslo.very_steep -0.8989 -0.21784 -0.6657 -0.05339  0.2801  0.06911\n\n",
        "> ",
        "anova(spe.rda)",
        "Permutation test for dbrda under reduced model\nPermutation: free\nNumber of permutations: 999\n\nModel: dbrda(formula = spe.hel ~ ele + slo + dis + pH + har + pho + nit + amm + oxy + bod, data = env3)\n         Df SumOfSqs      F Pr(>F)    \nModel    12  10.2304 3.5523  0.001 ***\nResidual 16   3.8399                  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
        "> ",
        "(spe.part.all <- varpart(spe.hel, envchem, envtopo))",
        "\nPartition of variance in RDA \n\nCall: varpart(Y = spe.hel, X = envchem, envtopo)\n\nExplanatory tables:\nX1:  envchem\nX2:  envtopo \n\nNo. of explanatory tables: 2 \nTotal variation (SS): 14.07 \n            Variance: 0.50251 \nNo. of observations: 29 \n\nPartition table:\n                     Df R.squared Adj.R.squared Testable\n[a+b] = X1            7   0.60579       0.47439     TRUE\n[b+c] = X2            3   0.41524       0.34507     TRUE\n[a+b+c] = X1+X2      10   0.73410       0.58638     TRUE\nIndividual fractions   ",
        "                                 \n[a] = X1|X2           7                 0.24131     TRUE\n[b]                   0                 0.23308    FALSE\n[c] = X2|X1           3                 0.11199     TRUE\n[d] = Residuals                         0.41362    FALSE\n---\nUse function ‘rda’ to test significance of fractions of interest\n",
        "> ",
        "plot(spe.part.all, digits = 2, bg = c(\"red\", \"blue\"))",
        "> ",
        "### Packages ###",
        "> ",
        "library(here)",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(vegan)",
        "> ",
        "",
        "> ",
        "### Start ###",
        "> ",
        "rm(list = ls())",
        "> ",
        "setwd(here(\"data/processed\"))",
        "> ",
        "",
        "> ",
        "### Load data ###",
        "> ",
        "sites <- read_csv2(\"data_processed_sites.csv\", col_names = T, na = c(\"na\", \"NA\"), col_types = ",
        "+ ",
        "                     cols(",
        "+ ",
        "                       .default = \"?\",",
        "+ ",
        "                       id = \"f\",",
        "+ ",
        "                       locationAbb = \"f\",",
        "+ ",
        "                       block = \"f\",",
        "+ ",
        "                       plot = \"f\",",
        "+ ",
        "                       exposition = \"f\",",
        "+ ",
        "                       ffh = \"f\",",
        "+ ",
        "                       vegetationCov = \"d\"",
        "+ ",
        "                     )) %>%",
        "+ ",
        "  select(id, plot, block, locationAbb, surveyYear, constructionYear, plotAge, exposition, PC1, PC2, PC3, ffh, changeType, vegetationCov, targetRichness, targetCov, ffh6510Richness, ffh6210Richness) %>%",
        "+ ",
        "  mutate(surveyYearF = as_factor(surveyYear))",
        "Fehler in select(., id, plot, block, locationAbb, surveyYear, constructionYear,  : \n  unbenutzte Argumente (id, plot, block, locationAbb, surveyYear, constructionYear, plotAge, exposition, PC1, PC2, PC3, ffh, changeType, vegetationCov, targetRichness, targetCov, ffh6510Richness, ffh6210Richness)\n",
        "> ",
        "",
        "> ",
        "species <- read_csv2(\"data_processed_species.csv\", col_names = T, na = \"na\", col_types = ",
        "+ ",
        "                       cols(",
        "+ ",
        "                         .default = \"d\",",
        "+ ",
        "                         name = \"f\"",
        "+ ",
        "                       )) %>%  ",
        "+ ",
        "  pivot_longer(-name, \"id\", \"value\") %>%",
        "+ ",
        "  pivot_wider(id, name) %>%",
        "+ ",
        "  arrange(id) %>%",
        "+ ",
        "  column_to_rownames(\"id\")",
        "\u001B[36mi\u001B[39m Using \u001B[34m\u001B[34m','\u001B[34m\u001B[39m as decimal and \u001B[34m\u001B[34m'.'\u001B[34m\u001B[39m as grouping mark. Use \u001B[38;5;251m\u001B[48;5;235m\u001B[38;5;251m\u001B[48;5;235m`read_delim()`\u001B[48;5;235m\u001B[38;5;251m\u001B[49m\u001B[39m for more control.\n",
        "> ",
        "### Load data ###",
        "> ",
        "sites <- read_csv2(\"data_processed_sites.csv\", col_names = T, na = c(\"na\", \"NA\"), col_types = ",
        "+ ",
        "                     cols(",
        "+ ",
        "                       .default = \"?\",",
        "+ ",
        "                       id = \"f\",",
        "+ ",
        "                       locationAbb = \"f\",",
        "+ ",
        "                       block = \"f\",",
        "+ ",
        "                       plot = \"f\",",
        "+ ",
        "                       exposition = \"f\",",
        "+ ",
        "                       ffh = \"f\",",
        "+ ",
        "                       vegetationCov = \"d\"",
        "+ ",
        "                     )) %>%",
        "+ ",
        "  select(id, plot, block, locationAbb, surveyYear, constructionYear, plotAge, exposition, PC1, PC2, PC3, ffh, changeType, vegetationCov, targetRichness, targetCov, ffh6510Richness, ffh6210Richness) %>%",
        "+ ",
        "  mutate(surveyYearF = as_factor(surveyYear))",
        "Fehler in select(., id, plot, block, locationAbb, surveyYear, constructionYear,  : \n  unbenutzte Argumente (id, plot, block, locationAbb, surveyYear, constructionYear, plotAge, exposition, PC1, PC2, PC3, ffh, changeType, vegetationCov, targetRichness, targetCov, ffh6510Richness, ffh6210Richness)\n",
        "> ",
        "setwd(here(\"data/processed\"))",
        "> ",
        "### Load data ###",
        "> ",
        "sites <- read_csv2(\"data_processed_sites.csv\", col_names = T, na = c(\"na\", \"NA\"), col_types = ",
        "+ ",
        "                     cols(",
        "+ ",
        "                       .default = \"?\",",
        "+ ",
        "                       id = \"f\",",
        "+ ",
        "                       locationAbb = \"f\",",
        "+ ",
        "                       block = \"f\",",
        "+ ",
        "                       plot = \"f\",",
        "+ ",
        "                       exposition = \"f\",",
        "+ ",
        "                       ffh = \"f\",",
        "+ ",
        "                       vegetationCov = \"d\"",
        "+ ",
        "                     )) #%>%",
        "\u001B[36mi\u001B[39m Using \u001B[34m\u001B[34m','\u001B[34m\u001B[39m as decimal and \u001B[34m\u001B[34m'.'\u001B[34m\u001B[39m as grouping mark. Use \u001B[38;5;251m\u001B[48;5;235m\u001B[38;5;251m\u001B[48;5;235m`read_delim()`\u001B[48;5;235m\u001B[38;5;251m\u001B[49m\u001B[39m for more control.\n",
        "> ",
        "### Load data ###",
        "> ",
        "sites <- read_csv2(\"data_processed_sites.csv\", col_names = T, na = c(\"na\", \"NA\"), col_types = ",
        "+ ",
        "                     cols(",
        "+ ",
        "                       .default = \"?\",",
        "+ ",
        "                       id = \"f\",",
        "+ ",
        "                       locationAbb = \"f\",",
        "+ ",
        "                       block = \"f\",",
        "+ ",
        "                       plot = \"f\",",
        "+ ",
        "                       exposition = \"f\",",
        "+ ",
        "                       ffh = \"f\",",
        "+ ",
        "                       vegetationCov = \"d\"",
        "+ ",
        "                     )) %>%",
        "+ ",
        "  select(id, plot, block, locationAbb, surveyYear, constructionYear, plotAge, exposition, PC1, PC2, PC3, ffh, changeType, vegetationCov, targetRichness, targetCov, ffh6510Richness, ffh6210Richness) %>%",
        "+ ",
        "  mutate(surveyYearF = as_factor(surveyYear))",
        "Fehler in select(., id, plot, block, locationAbb, surveyYear, constructionYear,  : \n  unbenutzte Argumente (id, plot, block, locationAbb, surveyYear, constructionYear, plotAge, exposition, PC1, PC2, PC3, ffh, changeType, vegetationCov, targetRichness, targetCov, ffh6510Richness, ffh6210Richness)\n",
        "> ",
        "### Load data ###",
        "> ",
        "sites <- read_csv2(\"data_processed_sites.csv\", col_names = T, na = c(\"na\", \"NA\"), col_types = ",
        "+ ",
        "                     cols(",
        "+ ",
        "                       .default = \"?\",",
        "+ ",
        "                       id = \"f\",",
        "+ ",
        "                       locationAbb = \"f\",",
        "+ ",
        "                       block = \"f\",",
        "+ ",
        "                       plot = \"f\",",
        "+ ",
        "                       exposition = \"f\",",
        "+ ",
        "                       ffh = \"f\",",
        "+ ",
        "                       vegetationCov = \"d\"",
        "+ ",
        "                     )) %>%",
        "+ ",
        "  select(id)",
        "Fehler in select(., id) : unbenutztes Argument (id)\n",
        "> ",
        "library(tidyverse)",
        "> ",
        "### Load data ###",
        "> ",
        "sites <- read_csv2(\"data_processed_sites.csv\", col_names = T, na = c(\"na\", \"NA\"), col_types = ",
        "+ ",
        "                     cols(",
        "+ ",
        "                       .default = \"?\",",
        "+ ",
        "                       id = \"f\",",
        "+ ",
        "                       locationAbb = \"f\",",
        "+ ",
        "                       block = \"f\",",
        "+ ",
        "                       plot = \"f\",",
        "+ ",
        "                       exposition = \"f\",",
        "+ ",
        "                       ffh = \"f\",",
        "+ ",
        "                       vegetationCov = \"d\"",
        "+ ",
        "                     )) %>%",
        "+ ",
        "  select(id)",
        "Fehler in select(., id) : unbenutztes Argument (id)\n",
        "> ",
        "select(species, name)",
        "Fehler in select(species, name) : unbenutztes Argument (name)\n",
        "> ",
        "select(species, Achillea_millefolium)",
        "Fehler in select(species, Achillea_millefolium) : \n  unbenutztes Argument (Achillea_millefolium)\n",
        "> ",
        "### Load data ###",
        "> ",
        "sites <- read_csv2(\"data_processed_sites.csv\", col_names = T, na = c(\"na\", \"NA\"), col_types = ",
        "+ ",
        "                     cols(",
        "+ ",
        "                       .default = \"?\",",
        "+ ",
        "                       id = \"f\",",
        "+ ",
        "                       locationAbb = \"f\",",
        "+ ",
        "                       block = \"f\",",
        "+ ",
        "                       plot = \"f\",",
        "+ ",
        "                       exposition = \"f\",",
        "+ ",
        "                       ffh = \"f\",",
        "+ ",
        "                       vegetationCov = \"d\"",
        "+ ",
        "                     )) %>%",
        "+ ",
        "  dplyr::select(id)",
        "\u001B[36mi\u001B[39m Using \u001B[34m\u001B[34m','\u001B[34m\u001B[39m as decimal and \u001B[34m\u001B[34m'.'\u001B[34m\u001B[39m as grouping mark. Use \u001B[38;5;251m\u001B[48;5;235m\u001B[38;5;251m\u001B[48;5;235m`read_delim()`\u001B[48;5;235m\u001B[38;5;251m\u001B[49m\u001B[39m for more control.\n\nRestarting R session...\n\n"
    ]
}